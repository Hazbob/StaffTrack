// <auto-generated />
using BootsTrackr.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootsTrackr.Migrations
{
    [DbContext(typeof(TrackerContext))]
    [Migration("20240505212020_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BootsTrackr.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.BaseTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("WeekOfYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BaseTrackers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseTracker");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.ATV", b =>
                {
                    b.HasBaseType("BootsTrackr.Models.Trackers.BaseTracker");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("ATV");
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.FutureRenew", b =>
                {
                    b.HasBaseType("BootsTrackr.Models.Trackers.BaseTracker");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("FutureRenew");
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.IPT", b =>
                {
                    b.HasBaseType("BootsTrackr.Models.Trackers.BaseTracker");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.ToTable("BaseTrackers", t =>
                        {
                            t.Property("Amount")
                                .HasColumnName("IPT_Amount");
                        });

                    b.HasDiscriminator().HasValue("IPT");
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.PDS", b =>
                {
                    b.HasBaseType("BootsTrackr.Models.Trackers.BaseTracker");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.ToTable("BaseTrackers", t =>
                        {
                            t.Property("Quantity")
                                .HasColumnName("PDS_Quantity");
                        });

                    b.HasDiscriminator().HasValue("PDS");
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.Sale", b =>
                {
                    b.HasBaseType("BootsTrackr.Models.Trackers.BaseTracker");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.ToTable("BaseTrackers", t =>
                        {
                            t.Property("Amount")
                                .HasColumnName("Sale_Amount");
                        });

                    b.HasDiscriminator().HasValue("Sale");
                });

            modelBuilder.Entity("BootsTrackr.Models.Trackers.BaseTracker", b =>
                {
                    b.HasOne("BootsTrackr.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
